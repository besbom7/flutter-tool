import 'dart:convert';
import 'dart:ffi';
import 'dart:io';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:http/http.dart' as http;
import 'package:intl/date_symbol_data_local.dart';
import 'package:intl/intl.dart';
import 'package:test/model/model_test.dart';
import 'package:test/page/detail_item.dart';
import 'package:test/page/page2.dart';
import './component/ContainerBox.dart';
import 'package:flutter_smart_dialog/flutter_smart_dialog.dart';
import './core/loading.dart';
import 'package:provider/provider.dart';
import 'package:nice_buttons/nice_buttons.dart';
import 'package:hive_flutter/hive_flutter.dart';

import 'package:webview_flutter/webview_flutter.dart';
// #docregion platform_imports
// Import for Android features.
import 'package:webview_flutter_android/webview_flutter_android.dart';
// Import for iOS features.
import 'package:webview_flutter_wkwebview/webview_flutter_wkwebview.dart';
// #enddocregion platform_imports

void main() {
  runApp(MyTransectionProvider());
}


class MyTransectionProvider extends StatelessWidget {
  const MyTransectionProvider({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (context) {
          return _TransectionProvider();
        })
      ],
      child: MaterialApp(
        title: "My Transection Provider",
        home: TranSectionTest(),
      ),
    );
  }
}

class TranSectionTest extends StatefulWidget {
  const TranSectionTest({super.key});

  @override
  State<TranSectionTest> createState() => _TranSectionTestState();
}

// Consumer(builder: (context, TransectionProvider provider, child) {
class _TranSectionTestState extends State<TranSectionTest> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("My TranSection Provider")),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          SizedBox(
            height: 60,
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Consumer(
                builder: (context, _TransectionProvider provider, child) {
                  return Container(
                    color: provider.getSetDetail() ? Colors.green : Colors.red,
                    child: Column(children: [
                      Text("get by customer : ${provider.getTitle()}")
                    ]),
                  );
                },
              )
            ],
          ),
          SizedBox(
            height: 50,
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                  "get by watch : ${context.watch<_TransectionProvider>().getTitle()}")
            ],
          ),
          SizedBox(
            height: 60,
          ),
          Expanded(
            child: Center(
                child: TextButton(
              onPressed: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return AddNumber();
                }));
              },
              child: Text("next page add number"),
            )),
          )
        ],
      ),
    );
  }
}

class AddNumber extends StatelessWidget {
  addNumber(_context) {
    var provider = Provider.of<_TransectionProvider>(_context, listen: false);
    provider.setDetail();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("add number page")),
      body: Center(
          child: TextButton(
        onPressed: () {
          addNumber(context);
          Navigator.pop(context);
        },
        child: Text("add num ber"),
      )),
    );
  }
}

class _TransectionProvider with ChangeNotifier {
  var title = "set detail = N";
  var setdetail = false;

  setDetail() {
    setdetail = !setdetail;
    title = "set detail = ${setdetail ? "Y" : "N"}";
    notifyListeners();
  }

  getTitle() => title;
  getSetDetail() => setdetail;
}