//ถ้าต้องการใช้ time picker ภาษาไทยต้อง ทำตามนี้
//1. install pub get  intl: ^0.17.0 (dependencies)
//2. install pub get  flutter_localization: ^0.1.10 (dependencies)
//3. import 'package:flutter_localizations/flutter_localizations.dart';
/*4. เพิ่ม localizationsDelegates ใน MaterialApp
      ********************
      localizationsDelegates: GlobalMaterialLocalizations.delegates,
      supportedLocales: const [
        Locale('th', ''),
      ],
      ********************

      Exemple
      ********************
      class MyApp extends StatelessWidget {
        const MyApp({super.key});

        @override
        Widget build(BuildContext context) {
          return MaterialApp(
            title: "test",
            home: MyTimePicker(),
            theme: ThemeData(primarySwatch: Colors.red),
            localizationsDelegates: GlobalMaterialLocalizations.delegates,
            supportedLocales: const [
              Locale('th', ''),
            ],
          );
        }
      }
      *********************

*/

class MyTimePicker extends StatefulWidget {
  const MyTimePicker({super.key});

  @override
  State<MyTimePicker> createState() => _MyTimePickerState();
}

class _MyTimePickerState extends State<MyTimePicker> {
  // TimeOfDay _time_select = TimeOfDay(hour: 8, minute: 30); // create Time Of Day
  TimeOfDay _time_select = TimeOfDay.now(); // create Time Of Day
  TimeOfDay _time_select2 = TimeOfDay.now(); // create Time Of Day

  void _showTimePicker() {
    showTimePicker(
      // เรียกใช้ Time Picker
      context: context,
      initialTime: _time_select, //กดหนดค่าเริ่มต้น คล้าย ngModel in angular
    ).then((value) {
      //รับ value หลังจากเลือก
      setState(() {
        if (value != null) {
          _time_select = value!; //set value
        }
      });
    });
  }

  void _showTimePicker24H() {
    showTimePicker(
      // เรียกใช้ Time Picker 24H
      context: context,
      initialTime: _time_select2, //กดหนดค่าเริ่มต้น คล้าย ngModel in angular
      builder: (BuildContext context, Widget? child) {
        //การกำหนดให้ TimePicker สามารถใช้ 24H ได้
        return MediaQuery(
          data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: true),
          child: child!,
        );
      },
    ).then((value) {
      //รับ value หลังจากเลือก
      setState(() {
        if (value != null) {
          _time_select2 = value!; //set value
        }
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Text("12H : " + _time_select.format(context).toString()),
          Text("24H : " +
              _time_select2.hour.toString() + //ดึงข้อมูล hour from time of day
              ":" +
              _time_select2.minute
                  .toString()), //ดึงข้อมูล minute from time of day
          MaterialButton(
              onPressed: () => _showTimePicker(),
              child: Padding(
                padding: const EdgeInsets.all(20),
                child: Text("show Time Picker"),
              ),
              color: Colors.green),
          MaterialButton(
              onPressed: () => _showTimePicker24H(),
              child: Padding(
                padding: const EdgeInsets.all(20),
                child: Text("show Time Picker 24 H"),
              ),
              color: Colors.orange)
        ],
      ),
    ));
  }
}